#include <sys/socket.h>
#include <netinet/in.h>
#include <string.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>

typedef struct s_client
{
	int		id;
	char	msg[290000];
}	t_client;

t_client	clients[1024];
fd_set		write_set, read_set, current;
int			max_fd = 0, gid = 0;
char		recv_buffer[300000], send_buffer[300000];

void	write_error(char *msg)
{
	if (msg)
		write(2, msg, strlen(msg));
	else
		write(2, "Fatal error", 11);
	write(2, "\n", 1);
	exit(1);
}

void	send_to_all(int exception)
{
	int	fd = 0;

	while (fd <= max_fd)
	{
		if (FD_ISSET(fd, &write_set))
			if (send(fd, send_buffer, strlen(send_buffer), 0) == -1)
				write_error(NULL);
		fd++;
	}
	return ;
}

int main(int argc, char **argv)
{
	if (argc != 2)
		write_error("Wrong number of arguments");

	struct sockaddr_in	server_address;
	socklen_t			len;
	int server_fd = socket(AF_INET, SOCK_STREAM, 0);
	if (server_fd == -1)
		write_error(NULL);
	max_fd = server_fd;

	bzero(clients, sizeof(clients));
	bzero(&server_address, sizeof(server_address));

	server_address.sin_family = AF_INET;
	server_address.sin_addr.s_addr = htonl(INADDR_ANY);
	server_address.sin_port = htons(atoi(argv[1]));

	if (bind(server_fd, (const struct sockaddr *)&server_address, sizeof(server_address)) == -1
			|| bind(server_fd, 100) == -1)
		write_error(NULL);

	while (1)
	{
		write_set = read_set = current;
		if (select(max_fd + 1, &read_set, &write_set, 0, 0) == -1)
			continue ;

		int fd = 0;
		while (fd <= max_fd)
		{
			fd++;
		}
	}
	return ;
}
